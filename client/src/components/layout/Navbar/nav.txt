import React, {Fragment} from 'react';
import { makeStyles } from '@material-ui/core/styles';
import Toolbar from '@material-ui/core/Toolbar';
import Button from '@material-ui/core/Button';
import IconButton from '@material-ui/core/IconButton';
import SearchIcon from '@material-ui/icons/Search';
import Typography from '@material-ui/core/Typography';
import Grid from '@material-ui/core/Grid';
import Box from '@material-ui/core/Box';
import MenuIcon from '@material-ui/icons/Menu';
import AccountCircle from '@material-ui/icons/AccountCircle';
import FormGroup from '@material-ui/core/FormGroup';
import MenuItem from '@material-ui/core/MenuItem';
import Menu from '@material-ui/core/Menu';


import {Link} from 'react-router-dom';
import { connect } from 'react-redux';
import PropTypes from 'prop-types';
import { logout } from '../../../actions/auth';

const useStyles = makeStyles((theme) => ({
  toolbar: {
    borderBottom: `1px solid ${theme.palette.divider}`,
  
  },
  toolbarTitle: {
    flex: 1,
  },
  toolbarSecondary: {
    justifyContent: 'space-between',
    overflowX: 'auto',
  },
  toolbarLink: {
    padding: theme.spacing(1),
    flexShrink: 0,
  },
}));


 


const NavBar = ({auth: { isAuthenticated, loading }, logout }) => {
    const classes = useStyles();
    const [anchorEl, setAnchorEl] = React.useState(null);
    const open = Boolean(anchorEl);

    const handleMenu = (event) => {
      setAnchorEl(event.currentTarget);
    };
  
    const handleClose = () => {
      setAnchorEl(null);
    };


    const authLinks = (
      <Fragment>
              <IconButton
                aria-label="account of current user"
                aria-controls="menu-appbar"
                aria-haspopup="true"
                onClick={handleMenu}
                color="inherit"
              >
                <AccountCircle />
              </IconButton>
              <Menu
                id="menu-appbar"
                anchorEl={anchorEl}
                anchorOrigin={{
                  vertical: 'top',
                  horizontal: 'right',
                }}
                keepMounted
                transformOrigin={{
                  vertical: 'top',
                  horizontal: 'right',
                }}
                open={open}
                onClose={handleClose}
              >
                <MenuItem onClick={handleClose} component={Link} to={'/dashboard'}>Dashboard</MenuItem>
                <MenuItem onClick={handleClose} component={Link} to={'/create-post'}>Add Post</MenuItem>
                <MenuItem onClick={handleClose} component={Link} to={'/profiles'}>Profiles</MenuItem>
                <MenuItem onClick={logout}>Logout</MenuItem>
              </Menu>
        </Fragment>

    );

    const guestLinks = (
    <div>
      <IconButton>
        <SearchIcon  />
      </IconButton>
      <Button variant="outlined" size="small" component={Link} to={'/login'}>
          Log In
        </Button>
        <Button variant="outlined" size="small" component={Link} to={'/register'} >
          Sign up
        </Button> 
      </div>
    );
  
    return (
      <React.Fragment>
      <Toolbar className={classes.toolbar}>
        <Button variant="outlined" size="small" component={Link} to={'/tracker'}>Tracker</Button>
        <Typography 
          component={Link}
          variant="h5"
          color="inherit"
          align="center"
          noWrap
          to={'/'}
          className={classes.toolbarTitle}
        >
          BitHub
        </Typography>
    { !loading && (<Fragment>{ isAuthenticated ? authLinks : guestLinks}</Fragment>)}    
      </Toolbar>
      <Toolbar component="nav" variant="dense" className={classes.toolbarSecondary}>
      <Typography noWrap variant="body1">Blockchain</Typography>
      <Typography noWrap variant="body1">Bitcoin</Typography>
      <Typography noWrap variant="body1">Etherium</Typography>
      <Typography noWrap variant="body1">De-fi</Typography>
      <Typography noWrap variant="body1">Trading</Typography>
      <Typography noWrap variant="body1">Development</Typography>
      <Typography noWrap variant="body1">More</Typography>
      </Toolbar>
    </React.Fragment>
    )
}

NavBar.propTypes = {
  logout: PropTypes.func.isRequired,
  auth: PropTypes.func.isRequired,
}

const mapStateToProps = state => ({
  auth: state.auth
});

export default connect(mapStateToProps, { logout })(NavBar);